// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt

  Component Component[]
  Customer  Customer[]

  @@map("users")
}

model Customer {
  id        Int      @id @default(autoincrement())
  userId    Int
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  budgets Budget[]

  @@map("customers")
}

model Component {
  id          Int      @id @default(autoincrement())
  userId      Int
  name        String
  description String?
  price       Float
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  expenditures Expenditure[]

  @@map("components")
}

model Expenditure {
  id          Int      @id @default(autoincrement())
  componentId Int
  budgetId    Int
  price       Float?
  quantity    Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now()) @updatedAt

  component Component @relation(fields: [componentId], references: [id])
  budget    Budget    @relation(fields: [budgetId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@map("expenditures")
}

model Budget {
  id         Int      @id @default(autoincrement())
  customerId Int
  status     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now()) @updatedAt

  customer Customer @relation(fields: [customerId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  expenditures Expenditure[]

  @@map("budgets")
}
